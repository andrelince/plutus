// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/plutus/banking-api/repositories (interfaces: AccountConnector)
//
// Generated by this command:
//
//	mockgen -destination=./mocks/mock_account_connector.go -package=mocks github.com/plutus/banking-api/repositories AccountConnector
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	model "github.com/plutus/banking-api/repositories/model"
	gomock "go.uber.org/mock/gomock"
)

// MockAccountConnector is a mock of AccountConnector interface.
type MockAccountConnector struct {
	ctrl     *gomock.Controller
	recorder *MockAccountConnectorMockRecorder
}

// MockAccountConnectorMockRecorder is the mock recorder for MockAccountConnector.
type MockAccountConnectorMockRecorder struct {
	mock *MockAccountConnector
}

// NewMockAccountConnector creates a new mock instance.
func NewMockAccountConnector(ctrl *gomock.Controller) *MockAccountConnector {
	mock := &MockAccountConnector{ctrl: ctrl}
	mock.recorder = &MockAccountConnectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccountConnector) EXPECT() *MockAccountConnectorMockRecorder {
	return m.recorder
}

// CreateAccount mocks base method.
func (m *MockAccountConnector) CreateAccount(arg0 context.Context, arg1 uint) (model.Account, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAccount", arg0, arg1)
	ret0, _ := ret[0].(model.Account)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAccount indicates an expected call of CreateAccount.
func (mr *MockAccountConnectorMockRecorder) CreateAccount(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAccount", reflect.TypeOf((*MockAccountConnector)(nil).CreateAccount), arg0, arg1)
}
